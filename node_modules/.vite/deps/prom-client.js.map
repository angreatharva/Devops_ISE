{
  "version": 3,
  "sources": ["../../prom-client/lib/util.js", "../../prom-client/lib/registry.js", "browser-external:util", "../../prom-client/lib/validation.js", "../../prom-client/lib/metric.js", "../../prom-client/lib/counter.js", "../../prom-client/lib/gauge.js", "../../prom-client/lib/histogram.js", "../../bintrees/lib/treebase.js", "../../bintrees/lib/rbtree.js", "../../bintrees/lib/bintree.js", "../../bintrees/index.js", "../../tdigest/tdigest.js", "../../prom-client/lib/timeWindowQuantiles.js", "../../prom-client/lib/summary.js", "browser-external:url", "browser-external:http", "browser-external:https", "browser-external:zlib", "../../prom-client/lib/pushgateway.js", "../../prom-client/lib/bucketGenerators.js", "../../prom-client/lib/metrics/processCpuTotal.js", "../../prom-client/lib/metrics/processStartTime.js", "browser-external:fs", "../../prom-client/lib/metrics/osMemoryHeapLinux.js", "../../prom-client/lib/metrics/helpers/safeMemoryUsage.js", "../../prom-client/lib/metrics/osMemoryHeap.js", "browser-external:process", "../../prom-client/lib/metrics/processOpenFileDescriptors.js", "../../prom-client/lib/metrics/processMaxFileDescriptors.js", "browser-external:perf_hooks", "../../prom-client/lib/metrics/eventLoopLag.js", "../../prom-client/lib/metrics/helpers/processMetricsHelpers.js", "../../prom-client/lib/metrics/processHandles.js", "../../prom-client/lib/metrics/processRequests.js", "../../prom-client/lib/metrics/processResources.js", "../../prom-client/lib/metrics/heapSizeAndUsed.js", "browser-external:v8", "../../prom-client/lib/metrics/heapSpacesSizeAndUsed.js", "../../prom-client/lib/metrics/version.js", "../../prom-client/lib/metrics/gc.js", "../../prom-client/lib/defaultMetrics.js", "../../prom-client/lib/metricAggregators.js", "browser-external:cluster", "../../prom-client/lib/cluster.js", "../../prom-client/index.js"],
  "sourcesContent": ["'use strict';\n\nexports.getValueAsString = function getValueString(value) {\n\tif (Number.isNaN(value)) {\n\t\treturn 'Nan';\n\t} else if (!Number.isFinite(value)) {\n\t\tif (value < 0) {\n\t\t\treturn '-Inf';\n\t\t} else {\n\t\t\treturn '+Inf';\n\t\t}\n\t} else {\n\t\treturn `${value}`;\n\t}\n};\n\nexports.removeLabels = function removeLabels(hashMap, labels) {\n\tconst hash = hashObject(labels);\n\tdelete hashMap[hash];\n};\n\nexports.setValue = function setValue(hashMap, value, labels) {\n\tconst hash = hashObject(labels);\n\thashMap[hash] = {\n\t\tvalue: typeof value === 'number' ? value : 0,\n\t\tlabels: labels || {},\n\t};\n\treturn hashMap;\n};\n\nexports.setValueDelta = function setValueDelta(\n\thashMap,\n\tdeltaValue,\n\tlabels,\n\thash = '',\n) {\n\tconst value = typeof deltaValue === 'number' ? deltaValue : 0;\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t} else {\n\t\thashMap[hash] = { value, labels };\n\t}\n\treturn hashMap;\n};\n\nexports.getLabels = function (labelNames, args) {\n\tif (typeof args[0] === 'object') {\n\t\treturn args[0];\n\t}\n\n\tif (labelNames.length !== args.length) {\n\t\tthrow new Error('Invalid number of arguments');\n\t}\n\n\tconst acc = {};\n\tfor (let i = 0; i < labelNames.length; i++) {\n\t\tacc[labelNames[i]] = args[i];\n\t}\n\treturn acc;\n};\n\nfunction hashObject(labels) {\n\t// We don't actually need a hash here. We just need a string that\n\t// is unique for each possible labels object and consistent across\n\t// calls with equivalent labels objects.\n\tlet keys = Object.keys(labels);\n\tif (keys.length === 0) {\n\t\treturn '';\n\t}\n\t// else\n\tif (keys.length > 1) {\n\t\tkeys = keys.sort(); // need consistency across calls\n\t}\n\n\tlet hash = '';\n\tlet i = 0;\n\tconst size = keys.length;\n\tfor (; i < size - 1; i++) {\n\t\thash += `${keys[i]}:${labels[keys[i]]},`;\n\t}\n\thash += `${keys[i]}:${labels[keys[i]]}`;\n\treturn hash;\n}\nexports.hashObject = hashObject;\n\nexports.isObject = function isObject(obj) {\n\treturn obj === Object(obj);\n};\n\nclass Grouper extends Map {\n\t/**\n\t * Adds the `value` to the `key`'s array of values.\n\t * @param {*} key Key to set.\n\t * @param {*} value Value to add to `key`'s array.\n\t * @returns {undefined} undefined.\n\t */\n\tadd(key, value) {\n\t\tif (this.has(key)) {\n\t\t\tthis.get(key).push(value);\n\t\t} else {\n\t\t\tthis.set(key, [value]);\n\t\t}\n\t}\n}\n\nexports.Grouper = Grouper;\n", "'use strict';\nconst { getValueAsString } = require('./util');\n\nfunction escapeString(str) {\n\treturn str.replace(/\\n/g, '\\\\n').replace(/\\\\(?!n)/g, '\\\\\\\\');\n}\nfunction escapeLabelValue(str) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\treturn escapeString(str).replace(/\"/g, '\\\\\"');\n}\n\nclass Registry {\n\tconstructor() {\n\t\tthis._metrics = {};\n\t\tthis._collectors = [];\n\t\tthis._defaultLabels = {};\n\t}\n\n\tgetMetricsAsArray() {\n\t\treturn Object.values(this._metrics);\n\t}\n\n\tasync getMetricAsPrometheusString(metric) {\n\t\tconst item = await metric.get();\n\t\tconst name = escapeString(item.name);\n\t\tconst help = `# HELP ${name} ${escapeString(item.help)}`;\n\t\tconst type = `# TYPE ${name} ${item.type}`;\n\t\tconst defaultLabels =\n\t\t\tObject.keys(this._defaultLabels).length > 0 ? this._defaultLabels : null;\n\n\t\tconst values = [help, type];\n\t\tfor (const { metricName = item.name, value, labels = {} } of item.values ||\n\t\t\t[]) {\n\t\t\tconst labelsWithDefaults = defaultLabels\n\t\t\t\t? { ...labels, ...defaultLabels, ...labels }\n\t\t\t\t: labels;\n\n\t\t\tconst formattedLabels = Object.entries(labelsWithDefaults).map(\n\t\t\t\t([n, v]) => `${n}=\"${escapeLabelValue(v)}\"`,\n\t\t\t);\n\t\t\tconst labelsString = formattedLabels.length\n\t\t\t\t? `{${formattedLabels.join(',')}}`\n\t\t\t\t: '';\n\n\t\t\tvalues.push(`${metricName}${labelsString} ${getValueAsString(value)}`);\n\t\t}\n\n\t\treturn values.join('\\n');\n\t}\n\n\tasync metrics() {\n\t\tconst promises = [];\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tpromises.push(this.getMetricAsPrometheusString(metric));\n\t\t}\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\treturn `${resolves.join('\\n\\n')}\\n`;\n\t}\n\n\tregisterMetric(metric) {\n\t\tif (this._metrics[metric.name] && this._metrics[metric.name] !== metric) {\n\t\t\tthrow new Error(\n\t\t\t\t`A metric with the name ${metric.name} has already been registered.`,\n\t\t\t);\n\t\t}\n\n\t\tthis._metrics[metric.name] = metric;\n\t}\n\n\tclear() {\n\t\tthis._metrics = {};\n\t\tthis._defaultLabels = {};\n\t}\n\n\tasync getMetricsAsJSON() {\n\t\tconst metrics = [];\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tconst promises = [];\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tpromises.push(metric.get());\n\t\t}\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\tfor (const item of resolves) {\n\t\t\tif (item.values && defaultLabelNames.length > 0) {\n\t\t\t\tfor (const val of item.values) {\n\t\t\t\t\t// Make a copy before mutating\n\t\t\t\t\tval.labels = Object.assign({}, val.labels);\n\n\t\t\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\t\t\tval.labels[labelName] =\n\t\t\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmetrics.push(item);\n\t\t}\n\n\t\treturn metrics;\n\t}\n\n\tremoveSingleMetric(name) {\n\t\tdelete this._metrics[name];\n\t}\n\n\tgetSingleMetricAsString(name) {\n\t\treturn this.getMetricAsPrometheusString(this._metrics[name]);\n\t}\n\n\tgetSingleMetric(name) {\n\t\treturn this._metrics[name];\n\t}\n\n\tsetDefaultLabels(labels) {\n\t\tthis._defaultLabels = labels;\n\t}\n\n\tresetMetrics() {\n\t\tfor (const metric in this._metrics) {\n\t\t\tthis._metrics[metric].reset();\n\t\t}\n\t}\n\n\tget contentType() {\n\t\treturn 'text/plain; version=0.0.4; charset=utf-8';\n\t}\n\n\tstatic merge(registers) {\n\t\tconst mergedRegistry = new Registry();\n\n\t\tconst metricsToMerge = registers.reduce(\n\t\t\t(acc, reg) => acc.concat(reg.getMetricsAsArray()),\n\t\t\t[],\n\t\t);\n\n\t\tmetricsToMerge.forEach(mergedRegistry.registerMetric, mergedRegistry);\n\t\treturn mergedRegistry;\n\t}\n}\n\nmodule.exports = Registry;\nmodule.exports.globalRegistry = new Registry();\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst util = require('util');\n\n// These are from https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels\nconst metricRegexp = /^[a-zA-Z_:][a-zA-Z0-9_:]*$/;\nconst labelRegexp = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexports.validateMetricName = function (name) {\n\treturn metricRegexp.test(name);\n};\n\nexports.validateLabelName = function (names = []) {\n\treturn names.every(name => labelRegexp.test(name));\n};\n\nexports.validateLabel = function validateLabel(savedLabels, labels) {\n\tfor (const label in labels) {\n\t\tif (!savedLabels.includes(label)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Added label \"${label}\" is not included in initial labelset: ${util.inspect(\n\t\t\t\t\tsavedLabels,\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t}\n};\n", "'use strict';\n\nconst { globalRegistry } = require('./registry');\nconst { isObject } = require('./util');\nconst { validateMetricName, validateLabelName } = require('./validation');\n\n/**\n * @abstract\n */\nclass Metric {\n\tconstructor(config, defaults = {}) {\n\t\tif (!isObject(config)) {\n\t\t\tthrow new TypeError('constructor expected a config object');\n\t\t}\n\t\tObject.assign(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tlabelNames: [],\n\t\t\t\tregisters: [globalRegistry],\n\t\t\t\taggregator: 'sum',\n\t\t\t},\n\t\t\tdefaults,\n\t\t\tconfig,\n\t\t);\n\t\tif (!this.registers) {\n\t\t\t// in case config.registers is `undefined`\n\t\t\tthis.registers = [globalRegistry];\n\t\t}\n\t\tif (!this.help) {\n\t\t\tthrow new Error('Missing mandatory help parameter');\n\t\t}\n\t\tif (!this.name) {\n\t\t\tthrow new Error('Missing mandatory name parameter');\n\t\t}\n\t\tif (!validateMetricName(this.name)) {\n\t\t\tthrow new Error('Invalid metric name');\n\t\t}\n\t\tif (!validateLabelName(this.labelNames)) {\n\t\t\tthrow new Error('Invalid label name');\n\t\t}\n\t\tif (this.collect && typeof this.collect !== 'function') {\n\t\t\tthrow new Error('Optional \"collect\" parameter must be a function');\n\t\t}\n\n\t\tthis.reset();\n\n\t\tfor (const register of this.registers) {\n\t\t\tregister.registerMetric(this);\n\t\t}\n\t}\n\n\treset() {\n\t\t/* abstract */\n\t}\n}\n\nmodule.exports = { Metric };\n", "/**\n * Counter metric\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'counter';\nconst { hashObject, isObject, getLabels, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Counter extends Metric {\n\t/**\n\t * Increment counter\n\t * @param {object} labels - What label you want to be incremented\n\t * @param {Number} value - Value to increment, if omitted increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tlet hash;\n\t\tif (isObject(labels)) {\n\t\t\thash = hashObject(labels);\n\t\t\tvalidateLabel(this.labelNames, labels);\n\t\t} else {\n\t\t\tvalue = labels;\n\t\t\tlabels = {};\n\t\t}\n\n\t\tif (value && !Number.isFinite(value)) {\n\t\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t\t}\n\t\tif (value < 0) {\n\t\t\tthrow new Error('It is not possible to decrease a counter');\n\t\t}\n\n\t\tif (value === null || value === undefined) value = 1;\n\n\t\tsetValue(this.hashMap, value, labels, hash);\n\t}\n\n\t/**\n\t * Reset counter\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0);\n\t\t}\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn removeLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction setValue(hashMap, value, labels = {}, hash = '') {\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t} else {\n\t\thashMap[hash] = { value, labels };\n\t}\n\treturn hashMap;\n}\n\nmodule.exports = Counter;\n", "/**\n * Gauge metric\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'gauge';\n\nconst {\n\tsetValue,\n\tsetValueDelta,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tremoveLabels,\n} = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Gauge extends Metric {\n\t/**\n\t * Set a gauge to a value\n\t * @param {object} labels - Object with labels and their values\n\t * @param {Number} value - Value to set the gauge to, must be positive\n\t * @returns {void}\n\t */\n\tset(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tset(this, labels, value);\n\t}\n\n\t/**\n\t * Reset gauge\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0, {});\n\t\t}\n\t}\n\n\t/**\n\t * Increment a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to increment - if omitted, increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, value);\n\t}\n\n\t/**\n\t * Decrement a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to decrement - if omitted, decrement with 1\n\t * @returns {void}\n\t */\n\tdec(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, -value);\n\t}\n\n\t/**\n\t * Set the gauge to current unix epoch\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tsetToCurrentTime(labels) {\n\t\tconst now = Date.now() / 1000;\n\t\tif (labels === undefined) {\n\t\t\tthis.set(now);\n\t\t} else {\n\t\t\tthis.set(labels, now);\n\t\t}\n\t}\n\n\t/**\n\t * Start a timer\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n\t * @example\n\t * var done = gauge.startTimer();\n\t * makeXHRRequest(function(err, response) {\n\t *\tdone(); //Duration of the request will be saved\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.set(Object.assign({}, labels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\t_getValue(labels) {\n\t\tconst hash = hashObject(labels || {});\n\t\treturn this.hashMap[hash] ? this.hashMap[hash].value : 0;\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t\tdec: this.dec.bind(this, labels),\n\t\t\tset: this.set.bind(this, labels),\n\t\t\tsetToCurrentTime: this.setToCurrentTime.bind(this, labels),\n\t\t\tstartTimer: this.startTimer.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction set(gauge, labels, value) {\n\tif (typeof value !== 'number') {\n\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tsetValue(gauge.hashMap, value, labels);\n}\n\nfunction setDelta(gauge, labels, delta) {\n\tif (typeof delta !== 'number') {\n\t\tthrow new TypeError(`Delta is not a valid number: ${util.format(delta)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tconst hash = hashObject(labels);\n\tsetValueDelta(gauge.hashMap, delta, labels, hash);\n}\n\nfunction getLabelArg(labels) {\n\treturn isObject(labels) ? labels : {};\n}\n\nfunction getValueArg(labels, value) {\n\treturn isObject(labels) ? value : labels;\n}\n\nmodule.exports = Gauge;\n", "/**\n * Histogram\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'histogram';\nconst { getLabels, hashObject, isObject, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Histogram extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tbuckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10],\n\t\t});\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'le') {\n\t\t\t\tthrow new Error('le is a reserved label keyword');\n\t\t\t}\n\t\t}\n\n\t\tthis.upperBounds = this.buckets;\n\t\tthis.bucketValues = this.upperBounds.reduce((acc, upperBound) => {\n\t\t\tacc[upperBound] = 0;\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tObject.freeze(this.bucketValues);\n\t\tObject.freeze(this.upperBounds);\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: createBaseValues(\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign({}, this.bucketValues),\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value in histogram\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe in the histogram\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst data = Object.values(this.hashMap);\n\t\tconst values = data\n\t\t\t.map(extractBucketValuesForExport(this))\n\t\t\t.reduce(addSumAndCountForExport(this), []);\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.hashMap = {};\n\t}\n\n\t/**\n\t * Initialize the metrics for the given combination of labels to zero\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tzero(labels) {\n\t\tconst hash = hashObject(labels);\n\t\tthis.hashMap[hash] = createBaseValues(\n\t\t\tlabels,\n\t\t\tObject.assign({}, this.bucketValues),\n\t\t);\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = histogram.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t * \tconst duration = end(); //Observe the duration of expensiveXHRRequest and returns duration in seconds\n\t * \tconsole.log('Duration', duration);\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe(Object.assign({}, startLabels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction setValuePair(labels, value, metricName) {\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t\tmetricName,\n\t};\n}\n\nfunction findBound(upperBounds, value) {\n\tfor (let i = 0; i < upperBounds.length; i++) {\n\t\tconst bound = upperBounds[i];\n\t\tif (value <= bound) {\n\t\t\treturn bound;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labelValuePair.labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet valueFromMap = this.hashMap[hash];\n\t\tif (!valueFromMap) {\n\t\t\tvalueFromMap = createBaseValues(\n\t\t\t\tlabelValuePair.labels,\n\t\t\t\tObject.assign({}, this.bucketValues),\n\t\t\t);\n\t\t}\n\n\t\tconst b = findBound(this.upperBounds, labelValuePair.value);\n\n\t\tvalueFromMap.sum += labelValuePair.value;\n\t\tvalueFromMap.count += 1;\n\n\t\tif (Object.prototype.hasOwnProperty.call(valueFromMap.bucketValues, b)) {\n\t\t\tvalueFromMap.bucketValues[b] += 1;\n\t\t}\n\n\t\tthis.hashMap[hash] = valueFromMap;\n\t};\n}\n\nfunction createBaseValues(labels, bucketValues) {\n\treturn {\n\t\tlabels,\n\t\tbucketValues,\n\t\tsum: 0,\n\t\tcount: 0,\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (!isObject(labels)) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {},\n\t\t};\n\t}\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t};\n}\n\nfunction extractBucketValuesForExport(histogram) {\n\treturn bucketData => {\n\t\tconst buckets = [];\n\t\tconst bucketLabelNames = Object.keys(bucketData.labels);\n\t\tlet acc = 0;\n\t\tfor (const upperBound of histogram.upperBounds) {\n\t\t\tacc += bucketData.bucketValues[upperBound];\n\t\t\tconst lbls = { le: upperBound };\n\t\t\tfor (const labelName of bucketLabelNames) {\n\t\t\t\tlbls[labelName] = bucketData.labels[labelName];\n\t\t\t}\n\t\t\tbuckets.push(setValuePair(lbls, acc, `${histogram.name}_bucket`));\n\t\t}\n\t\treturn { buckets, data: bucketData };\n\t};\n}\n\nfunction addSumAndCountForExport(histogram) {\n\treturn (acc, d) => {\n\t\tacc.push(...d.buckets);\n\n\t\tconst infLabel = { le: '+Inf' };\n\t\tfor (const label of Object.keys(d.data.labels)) {\n\t\t\tinfLabel[label] = d.data.labels[label];\n\t\t}\n\t\tacc.push(\n\t\t\tsetValuePair(infLabel, d.data.count, `${histogram.name}_bucket`),\n\t\t\tsetValuePair(d.data.labels, d.data.sum, `${histogram.name}_sum`),\n\t\t\tsetValuePair(d.data.labels, d.data.count, `${histogram.name}_count`),\n\t\t);\n\t\treturn acc;\n\t};\n}\n\nmodule.exports = Histogram;\n", "\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n", "\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n", "\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n", "module.exports = {\n    RBTree: require('./lib/rbtree'),\n    BinTree: require('./lib/bintree')\n};\n", "//\n// TDigest:\n//\n// approximate distribution percentiles from a stream of reals\n//\nvar RBTree = require('bintrees').RBTree;\n\nfunction TDigest(delta, K, CX) {\n    // allocate a TDigest structure.\n    //\n    // delta is the compression factor, the max fraction of mass that\n    // can be owned by one centroid (bigger, up to 1.0, means more\n    // compression). delta=false switches off TDigest behavior and treats\n    // the distribution as discrete, with no merging and exact values\n    // reported.\n    //\n    // K is a size threshold that triggers recompression as the TDigest\n    // grows during input.  (Set it to 0 to disable automatic recompression)\n    //\n    // CX specifies how often to update cached cumulative totals used\n    // for quantile estimation during ingest (see cumulate()).  Set to\n    // 0 to use exact quantiles for each new point.\n    //\n    this.discrete = (delta === false);\n    this.delta = delta || 0.01;\n    this.K = (K === undefined) ? 25 : K;\n    this.CX = (CX === undefined) ? 1.1 : CX;\n    this.centroids = new RBTree(compare_centroid_means);\n    this.nreset = 0;\n    this.reset();\n}\n\nTDigest.prototype.reset = function() {\n    // prepare to digest new points.\n    //\n    this.centroids.clear();\n    this.n = 0;\n    this.nreset += 1;\n    this.last_cumulate = 0;\n};\n\nTDigest.prototype.size = function() {\n    return this.centroids.size;\n};\n\nTDigest.prototype.toArray = function(everything) {\n    // return {mean,n} of centroids as an array ordered by mean.\n    //\n    var result = [];\n    if (everything) {\n        this._cumulate(true); // be sure cumns are exact\n        this.centroids.each(function(c) { result.push(c); });\n    } else {\n        this.centroids.each(function(c) { result.push({mean:c.mean, n:c.n}); });\n    }\n    return result;\n};\n\nTDigest.prototype.summary = function() {\n    var approx = (this.discrete) ? \"exact \" : \"approximating \";\n    var s = [approx + this.n + \" samples using \" + this.size() + \" centroids\",\n             \"min = \"+this.percentile(0),\n             \"Q1  = \"+this.percentile(0.25),\n             \"Q2  = \"+this.percentile(0.5),\n             \"Q3  = \"+this.percentile(0.75),\n             \"max = \"+this.percentile(1.0)];\n    return s.join('\\n');\n};\n\nfunction compare_centroid_means(a, b) {\n    // order two centroids by mean.\n    //\n    return (a.mean > b.mean) ? 1 : (a.mean < b.mean) ? -1 : 0;\n}\n\nfunction compare_centroid_mean_cumns(a, b) {\n    // order two centroids by mean_cumn.\n    //\n    return (a.mean_cumn - b.mean_cumn);\n}\n\nTDigest.prototype.push = function(x, n) {\n    // incorporate value or array of values x, having count n into the\n    // TDigest. n defaults to 1.\n    //\n    n = n || 1;\n    x = Array.isArray(x) ? x : [x];\n    for (var i = 0 ; i < x.length ; i++) {\n        this._digest(x[i], n);\n    }\n};\n\nTDigest.prototype.push_centroid = function(c) {\n    // incorporate centroid or array of centroids c\n    //\n    c = Array.isArray(c) ? c : [c];\n    for (var i = 0 ; i < c.length ; i++) {\n        this._digest(c[i].mean, c[i].n);\n    }\n};\n\nTDigest.prototype._cumulate = function(exact) {\n    // update cumulative counts for each centroid\n    //\n    // exact: falsey means only cumulate after sufficient\n    // growth. During ingest, these counts are used as quantile\n    // estimates, and they work well even when somewhat out of\n    // date. (this is a departure from the publication, you may set CX\n    // to 0 to disable).\n    //\n    if (this.n === this.last_cumulate ||\n        !exact && this.CX && this.CX > (this.n / this.last_cumulate)) {\n        return;\n    }\n    var cumn = 0;\n    this.centroids.each(function(c) {\n        c.mean_cumn = cumn + c.n / 2; // half of n at the mean\n        cumn = c.cumn = cumn + c.n;\n    });\n    this.n = this.last_cumulate = cumn;\n};\n\nTDigest.prototype.find_nearest = function(x) {\n    // find the centroid closest to x. The assumption of\n    // unique means and a unique nearest centroid departs from the\n    // paper, see _digest() below\n    //\n    if (this.size() === 0) {\n        return null;\n    }\n    var iter = this.centroids.lowerBound({mean:x}); // x <= iter || iter==null\n    var c = (iter.data() === null) ? iter.prev() : iter.data();\n    if (c.mean === x || this.discrete) {\n        return c; // c is either x or a neighbor (discrete: no distance func)\n    }\n    var prev = iter.prev();\n    if (prev && Math.abs(prev.mean - x) < Math.abs(c.mean - x)) {\n        return prev;\n    } else {\n        return c;\n    }\n};\n\nTDigest.prototype._new_centroid = function(x, n, cumn) {\n    // create and insert a new centroid into the digest (don't update\n    // cumulatives).\n    //\n    var c = {mean:x, n:n, cumn:cumn};\n    this.centroids.insert(c);\n    this.n += n;\n    return c;\n};\n\nTDigest.prototype._addweight = function(nearest, x, n) {\n    // add weight at location x to nearest centroid.  adding x to\n    // nearest will not shift its relative position in the tree and\n    // require reinsertion.\n    //\n    if (x !== nearest.mean) {\n        nearest.mean += n * (x - nearest.mean) / (nearest.n + n);\n    }\n    nearest.cumn += n;\n    nearest.mean_cumn += n / 2;\n    nearest.n += n;\n    this.n += n;\n};\n\nTDigest.prototype._digest = function(x, n) {\n    // incorporate value x, having count n into the TDigest.\n    //\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var nearest = this.find_nearest(x);\n    if (nearest && nearest.mean === x) {\n        // accumulate exact matches into the centroid without\n        // limit. this is a departure from the paper, made so\n        // centroids remain unique and code can be simple.\n        this._addweight(nearest, x, n);\n    } else if (nearest === min) {\n        this._new_centroid(x, n, 0); // new point around min boundary\n    } else if (nearest === max ) {\n        this._new_centroid(x, n, this.n); // new point around max boundary\n    } else if (this.discrete) {\n        this._new_centroid(x, n, nearest.cumn); // never merge\n    } else {\n        // conider a merge based on nearest centroid's capacity. if\n        // there's not room for all of n, don't bother merging any of\n        // it into nearest, as we'll have to make a new centroid\n        // anyway for the remainder (departure from the paper).\n        var p = nearest.mean_cumn / this.n;\n        var max_n = Math.floor(4 * this.n * this.delta * p * (1 - p));\n        if (max_n - nearest.n >= n) {\n            this._addweight(nearest, x, n);\n        } else {\n            this._new_centroid(x, n, nearest.cumn);\n        }\n    }\n    this._cumulate(false);\n    if (!this.discrete && this.K && this.size() > this.K / this.delta) {\n        // re-process the centroids and hope for some compression.\n        this.compress();\n    }\n};\n\nTDigest.prototype.bound_mean = function(x) {\n    // find centroids lower and upper such that lower.mean < x <\n    // upper.mean or lower.mean === x === upper.mean. Don't call\n    // this for x out of bounds.\n    //\n    var iter = this.centroids.upperBound({mean:x}); // x < iter\n    var lower = iter.prev();      // lower <= x\n    var upper = (lower.mean === x) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.p_rank = function(x_or_xlist) {\n    // return approximate percentile-ranks (0..1) for data value x.\n    // or list of x.  calculated according to\n    // https://en.wikipedia.org/wiki/Percentile_rank\n    //\n    // (Note that in continuous mode, boundary sample values will\n    // report half their centroid weight inward from 0/1 as the\n    // percentile-rank. X values outside the observed range return\n    // 0/1)\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var xs = Array.isArray(x_or_xlist) ? x_or_xlist : [x_or_xlist];\n    var ps = xs.map(this._p_rank, this);\n    return Array.isArray(x_or_xlist) ? ps : ps[0];\n};\n\nTDigest.prototype._p_rank = function(x) {\n    if (this.size() === 0) {\n        return undefined;\n    } else if (x < this.centroids.min().mean) {\n        return 0.0;\n    } else if (x > this.centroids.max().mean) {\n        return 1.0;\n    }\n    // find centroids that bracket x and interpolate x's cumn from\n    // their cumn's.\n    this._cumulate(true); // be sure cumns are exact\n    var bound = this.bound_mean(x);\n    var lower = bound[0], upper = bound[1];\n    if (this.discrete) {\n        return lower.cumn / this.n;\n    } else {\n        var cumn = lower.mean_cumn;\n        if (lower !== upper) {\n            cumn += (x - lower.mean) * (upper.mean_cumn - lower.mean_cumn) / (upper.mean - lower.mean);\n        }\n        return cumn / this.n;\n    }\n};\n\nTDigest.prototype.bound_mean_cumn = function(cumn) {\n    // find centroids lower and upper such that lower.mean_cumn < x <\n    // upper.mean_cumn or lower.mean_cumn === x === upper.mean_cumn. Don't call\n    // this for cumn out of bounds.\n    //\n    // XXX because mean and mean_cumn give rise to the same sort order\n    // (up to identical means), use the mean rbtree for our search.\n    this.centroids._comparator = compare_centroid_mean_cumns;\n    var iter = this.centroids.upperBound({mean_cumn:cumn}); // cumn < iter\n    this.centroids._comparator = compare_centroid_means;\n    var lower = iter.prev();      // lower <= cumn\n    var upper = (lower && lower.mean_cumn === cumn) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.percentile = function(p_or_plist) {\n    // for percentage p (0..1), or for each p in a list of ps, return\n    // the smallest data value q at which at least p percent of the\n    // observations <= q.\n    //\n    // for discrete distributions, this selects q using the Nearest\n    // Rank Method\n    // (https://en.wikipedia.org/wiki/Percentile#The_Nearest_Rank_method)\n    // (in scipy, same as percentile(...., interpolation='higher')\n    //\n    // for continuous distributions, interpolates data values between\n    // count-weighted bracketing means.\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var ps = Array.isArray(p_or_plist) ? p_or_plist : [p_or_plist];\n    var qs = ps.map(this._percentile, this);\n    return Array.isArray(p_or_plist) ? qs : qs[0];\n};\n\nTDigest.prototype._percentile = function(p) {\n    if (this.size() === 0) {\n        return undefined;\n    }\n    this._cumulate(true); // be sure cumns are exact\n    var h = this.n * p;\n    var bound = this.bound_mean_cumn(h);\n    var lower = bound[0], upper = bound[1];\n\n    if (upper === lower || lower === null || upper === null) {\n        return (lower || upper).mean;\n    } else if (!this.discrete) {\n        return lower.mean + (h - lower.mean_cumn) * (upper.mean - lower.mean) / (upper.mean_cumn - lower.mean_cumn);\n    } else if (h <= lower.cumn) {\n        return lower.mean;\n    } else {\n        return upper.mean;\n    }\n};\n\nfunction pop_random(choices) {\n    // remove and return an item randomly chosen from the array of choices\n    // (mutates choices)\n    //\n    var idx = Math.floor(Math.random() * choices.length);\n    return choices.splice(idx, 1)[0];\n}\n\nTDigest.prototype.compress = function() {\n    // TDigests experience worst case compression (none) when input\n    // increases monotonically.  Improve on any bad luck by\n    // reconsuming digest centroids as if they were weighted points\n    // while shuffling their order (and hope for the best).\n    //\n    if (this.compressing) {\n        return;\n    }\n    var points = this.toArray();\n    this.reset();\n    this.compressing = true;\n    while (points.length > 0) {\n        this.push_centroid(pop_random(points));\n    }\n    this._cumulate(true);\n    this.compressing = false;\n};\n\nfunction Digest(config) {\n    // allocate a distribution digest structure. This is an extension\n    // of a TDigest structure that starts in exact histogram (discrete)\n    // mode, and automatically switches to TDigest mode for large\n    // samples that appear to be from a continuous distribution.\n    //\n    this.config = config || {};\n    this.mode = this.config.mode || 'auto'; // disc, cont, auto\n    TDigest.call(this, this.mode === 'cont' ? config.delta : false);\n    this.digest_ratio = this.config.ratio || 0.9;\n    this.digest_thresh = this.config.thresh || 1000;\n    this.n_unique = 0;\n}\nDigest.prototype = Object.create(TDigest.prototype);\nDigest.prototype.constructor = Digest;\n\nDigest.prototype.push = function(x_or_xlist) {\n    TDigest.prototype.push.call(this, x_or_xlist);\n    this.check_continuous();\n};\n\nDigest.prototype._new_centroid = function(x, n, cumn) {\n    this.n_unique += 1;\n    TDigest.prototype._new_centroid.call(this, x, n, cumn);\n};\n\nDigest.prototype._addweight = function(nearest, x, n) {\n    if (nearest.n === 1) {\n        this.n_unique -= 1;\n    }\n    TDigest.prototype._addweight.call(this, nearest, x, n);\n};\n\nDigest.prototype.check_continuous = function() {\n    // while in 'auto' mode, if there are many unique elements, assume\n    // they are from a continuous distribution and switch to 'cont'\n    // mode (tdigest behavior). Return true on transition from\n    // disctete to continuous.\n    if (this.mode !== 'auto' || this.size() < this.digest_thresh) {\n        return false;\n    }\n    if (this.n_unique / this.size() > this.digest_ratio) {\n        this.mode = 'cont';\n        this.discrete = false;\n        this.delta = this.config.delta || 0.01;\n        this.compress();\n        return true;\n    }\n    return false;\n};\n\nmodule.exports = {\n    'TDigest': TDigest,\n    'Digest': Digest\n};\n", "'use strict';\n\nconst { TDigest } = require('tdigest');\n\nclass TimeWindowQuantiles {\n\tconstructor(maxAgeSeconds, ageBuckets) {\n\t\tthis.maxAgeSeconds = maxAgeSeconds || 0;\n\t\tthis.ageBuckets = ageBuckets || 0;\n\n\t\tthis.shouldRotate = maxAgeSeconds && ageBuckets;\n\n\t\tthis.ringBuffer = Array(ageBuckets).fill(new TDigest());\n\t\tthis.currentBuffer = 0;\n\n\t\tthis.lastRotateTimestampMillis = Date.now();\n\t\tthis.durationBetweenRotatesMillis =\n\t\t\t(maxAgeSeconds * 1000) / ageBuckets || Infinity;\n\t}\n\n\tsize() {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.size();\n\t}\n\n\tpercentile(quantile) {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.percentile(quantile);\n\t}\n\n\tpush(value) {\n\t\trotate.call(this);\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.push(value);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.reset();\n\t\t});\n\t}\n\n\tcompress() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.compress();\n\t\t});\n\t}\n}\n\nfunction rotate() {\n\tlet timeSinceLastRotateMillis = Date.now() - this.lastRotateTimestampMillis;\n\twhile (\n\t\ttimeSinceLastRotateMillis > this.durationBetweenRotatesMillis &&\n\t\tthis.shouldRotate\n\t) {\n\t\tthis.ringBuffer[this.currentBuffer] = new TDigest();\n\n\t\tif (++this.currentBuffer >= this.ringBuffer.length) {\n\t\t\tthis.currentBuffer = 0;\n\t\t}\n\t\ttimeSinceLastRotateMillis -= this.durationBetweenRotatesMillis;\n\t\tthis.lastRotateTimestampMillis += this.durationBetweenRotatesMillis;\n\t}\n\treturn this.ringBuffer[this.currentBuffer];\n}\n\nmodule.exports = TimeWindowQuantiles;\n", "/**\n * Summary\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'summary';\nconst { getLabels, hashObject, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\nconst timeWindowQuantiles = require('./timeWindowQuantiles');\n\nconst DEFAULT_COMPRESS_COUNT = 1000; // every 1000 measurements\n\nclass Summary extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tpercentiles: [0.01, 0.05, 0.5, 0.9, 0.95, 0.99, 0.999],\n\t\t\tcompressCount: DEFAULT_COMPRESS_COUNT,\n\t\t\thashMap: {},\n\t\t});\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'quantile')\n\t\t\t\tthrow new Error('quantile is a reserved label keyword');\n\t\t}\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: {\n\t\t\t\t\tlabels: {},\n\t\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tsum: 0,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst hashKeys = Object.keys(this.hashMap);\n\t\tconst values = [];\n\n\t\thashKeys.forEach(hashKey => {\n\t\t\tconst s = this.hashMap[hashKey];\n\t\t\tif (s) {\n\t\t\t\tif (this.pruneAgedBuckets && s.td.size() === 0) {\n\t\t\t\t\tdelete this.hashMap[hashKey];\n\t\t\t\t} else {\n\t\t\t\t\textractSummariesForExport(s, this.percentiles).forEach(v => {\n\t\t\t\t\t\tvalues.push(v);\n\t\t\t\t\t});\n\t\t\t\t\tvalues.push(getSumForExport(s, this));\n\t\t\t\t\tvalues.push(getCountForExport(s, this));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tconst data = Object.values(this.hashMap);\n\t\tdata.forEach(s => {\n\t\t\ts.td.reset();\n\t\t\ts.count = 0;\n\t\t\ts.sum = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = summary.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t *\tend(); //Observe the duration of expensiveXHRRequest\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction extractSummariesForExport(summaryOfLabels, percentiles) {\n\tsummaryOfLabels.td.compress();\n\n\treturn percentiles.map(percentile => {\n\t\tconst percentileValue = summaryOfLabels.td.percentile(percentile);\n\t\treturn {\n\t\t\tlabels: Object.assign({ quantile: percentile }, summaryOfLabels.labels),\n\t\t\tvalue: percentileValue ? percentileValue : 0,\n\t\t};\n\t});\n}\n\nfunction getCountForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_count`,\n\t\tlabels: value.labels,\n\t\tvalue: value.count,\n\t};\n}\n\nfunction getSumForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_sum`,\n\t\tlabels: value.labels,\n\t\tvalue: value.sum,\n\t};\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe(Object.assign({}, startLabels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet summaryOfLabel = this.hashMap[hash];\n\t\tif (!summaryOfLabel) {\n\t\t\tsummaryOfLabel = {\n\t\t\t\tlabels: labelValuePair.labels,\n\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\tcount: 0,\n\t\t\t\tsum: 0,\n\t\t\t};\n\t\t}\n\n\t\tsummaryOfLabel.td.push(labelValuePair.value);\n\t\tsummaryOfLabel.count++;\n\t\tif (summaryOfLabel.count % this.compressCount === 0) {\n\t\t\tsummaryOfLabel.td.compress();\n\t\t}\n\t\tsummaryOfLabel.sum += labelValuePair.value;\n\t\tthis.hashMap[hash] = summaryOfLabel;\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (value === undefined) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {},\n\t\t};\n\t}\n\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t};\n}\n\nmodule.exports = Summary;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst { gzipSync } = require('zlib');\nconst { globalRegistry } = require('./registry');\n\nclass Pushgateway {\n\tconstructor(gatewayUrl, options, registry) {\n\t\tif (!registry) {\n\t\t\tregistry = globalRegistry;\n\t\t}\n\t\tthis.registry = registry;\n\t\tthis.gatewayUrl = gatewayUrl;\n\t\tthis.requestOptions = Object.assign({}, options);\n\t}\n\n\tpushAdd(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'POST', params.jobName, params.groupings);\n\t}\n\n\tpush(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'PUT', params.jobName, params.groupings);\n\t}\n\n\tdelete(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'DELETE', params.jobName, params.groupings);\n\t}\n}\nasync function useGateway(method, job, groupings) {\n\t// `URL` first added in v6.13.0\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst gatewayUrlParsed = url.parse(this.gatewayUrl);\n\tconst gatewayUrlPath =\n\t\tgatewayUrlParsed.pathname && gatewayUrlParsed.pathname !== '/'\n\t\t\t? gatewayUrlParsed.pathname\n\t\t\t: '';\n\tconst path = `${gatewayUrlPath}/metrics/job/${encodeURIComponent(\n\t\tjob,\n\t)}${generateGroupings(groupings)}`;\n\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst target = url.resolve(this.gatewayUrl, path);\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst requestParams = url.parse(target);\n\tconst httpModule = isHttps(requestParams.href) ? https : http;\n\tconst options = Object.assign(requestParams, this.requestOptions, {\n\t\tmethod,\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst req = httpModule.request(options, resp => {\n\t\t\tlet body = '';\n\t\t\tresp.setEncoding('utf8');\n\t\t\tresp.on('data', chunk => {\n\t\t\t\tbody += chunk;\n\t\t\t});\n\t\t\tresp.on('end', () => {\n\t\t\t\tresolve({ resp, body });\n\t\t\t});\n\t\t});\n\t\treq.on('error', err => {\n\t\t\treject(err);\n\t\t});\n\n\t\tif (method !== 'DELETE') {\n\t\t\tthis.registry\n\t\t\t\t.metrics()\n\t\t\t\t.then(metrics => {\n\t\t\t\t\tif (\n\t\t\t\t\t\toptions.headers &&\n\t\t\t\t\t\toptions.headers['Content-Encoding'] === 'gzip'\n\t\t\t\t\t) {\n\t\t\t\t\t\tmetrics = gzipSync(metrics);\n\t\t\t\t\t}\n\t\t\t\t\treq.write(metrics);\n\t\t\t\t\treq.end();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n}\n\nfunction generateGroupings(groupings) {\n\tif (!groupings) {\n\t\treturn '';\n\t}\n\treturn Object.keys(groupings)\n\t\t.map(\n\t\t\tkey =>\n\t\t\t\t`/${encodeURIComponent(key)}/${encodeURIComponent(groupings[key])}`,\n\t\t)\n\t\t.join('');\n}\n\nfunction isHttps(href) {\n\treturn href.search(/^https/) !== -1;\n}\n\nmodule.exports = Pushgateway;\n", "'use strict';\n\nexports.linearBuckets = (start, width, count) => {\n\tif (count < 1) {\n\t\tthrow new Error('Linear buckets needs a positive count');\n\t}\n\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start + i * width;\n\t}\n\treturn buckets;\n};\n\nexports.exponentialBuckets = (start, factor, count) => {\n\tif (start <= 0) {\n\t\tthrow new Error('Exponential buckets needs a positive start');\n\t}\n\tif (count < 1) {\n\t\tthrow new Error('Exponential buckets needs a positive count');\n\t}\n\tif (factor <= 1) {\n\t\tthrow new Error('Exponential buckets needs a factor greater than 1');\n\t}\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start;\n\t\tstart *= factor;\n\t}\n\treturn buckets;\n};\n", "'use strict';\n\nconst Counter = require('../counter');\nconst PROCESS_CPU_USER_SECONDS = 'process_cpu_user_seconds_total';\nconst PROCESS_CPU_SYSTEM_SECONDS = 'process_cpu_system_seconds_total';\nconst PROCESS_CPU_SECONDS = 'process_cpu_seconds_total';\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tlet lastCpuUsage = process.cpuUsage();\n\n\tconst cpuUserUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_USER_SECONDS,\n\t\thelp: 'Total user CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\tconst cpuUsage = process.cpuUsage();\n\n\t\t\tconst userUsageMicros = cpuUsage.user - lastCpuUsage.user;\n\t\t\tconst systemUsageMicros = cpuUsage.system - lastCpuUsage.system;\n\n\t\t\tlastCpuUsage = cpuUsage;\n\n\t\t\tcpuUserUsageCounter.inc(labels, userUsageMicros / 1e6);\n\t\t\tcpuSystemUsageCounter.inc(labels, systemUsageMicros / 1e6);\n\t\t\tcpuUsageCounter.inc(labels, (userUsageMicros + systemUsageMicros) / 1e6);\n\t\t},\n\t});\n\tconst cpuSystemUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SYSTEM_SECONDS,\n\t\thelp: 'Total system CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst cpuUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SECONDS,\n\t\thelp: 'Total user and system CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_CPU_USER_SECONDS,\n\tPROCESS_CPU_SYSTEM_SECONDS,\n\tPROCESS_CPU_SECONDS,\n];\n", "'use strict';\n\nconst Gauge = require('../gauge');\nconst startInSeconds = Math.round(Date.now() / 1000 - process.uptime());\n\nconst PROCESS_START_TIME = 'process_start_time_seconds';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_START_TIME,\n\t\thelp: 'Start time of the process since unix epoch in seconds.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\taggregator: 'omit',\n\t\tcollect() {\n\t\t\tthis.set(labels, startInSeconds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_START_TIME];\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst values = ['VmSize', 'VmRSS', 'VmData'];\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\nconst PROCESS_VIRTUAL_MEMORY = 'process_virtual_memory_bytes';\nconst PROCESS_HEAP = 'process_heap_bytes';\n\nfunction structureOutput(input) {\n\tconst returnValue = {};\n\n\tinput\n\t\t.split('\\n')\n\t\t.filter(s => values.some(value => s.indexOf(value) === 0))\n\t\t.forEach(string => {\n\t\t\tconst split = string.split(':');\n\n\t\t\t// Get the value\n\t\t\tlet value = split[1].trim();\n\t\t\t// Remove trailing ` kb`\n\t\t\tvalue = value.substr(0, value.length - 3);\n\t\t\t// Make it into a number in bytes bytes\n\t\t\tvalue = Number(value) * 1024;\n\n\t\t\treturnValue[split[0]] = value;\n\t\t});\n\n\treturn returnValue;\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst residentMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\t// Sync I/O is often problematic, but /proc isn't really I/O, it\n\t\t\t\t// a virtual filesystem that maps directly to in-kernel data\n\t\t\t\t// structures and never blocks.\n\t\t\t\t//\n\t\t\t\t// Node.js/libuv do this already for process.memoryUsage(), see:\n\t\t\t\t// - https://github.com/libuv/libuv/blob/a629688008694ed8022269e66826d4d6ec688b83/src/unix/linux-core.c#L506-L523\n\t\t\t\tconst stat = fs.readFileSync('/proc/self/status', 'utf8');\n\t\t\t\tconst structuredOutput = structureOutput(stat);\n\n\t\t\t\tresidentMemGauge.set(labels, structuredOutput.VmRSS);\n\t\t\t\tvirtualMemGauge.set(labels, structuredOutput.VmSize);\n\t\t\t\theapSizeMemGauge.set(labels, structuredOutput.VmData);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n\tconst virtualMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_VIRTUAL_MEMORY,\n\t\thelp: 'Virtual memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst heapSizeMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_HEAP,\n\t\thelp: 'Process heap size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_RESIDENT_MEMORY,\n\tPROCESS_VIRTUAL_MEMORY,\n\tPROCESS_HEAP,\n];\n", "'use strict';\n\n// process.memoryUsage() can throw on some platforms, see #67\nfunction safeMemoryUsage() {\n\ttry {\n\t\treturn process.memoryUsage();\n\t} catch {\n\t\treturn;\n\t}\n}\n\nmodule.exports = safeMemoryUsage;\n", "'use strict';\n\nconst Gauge = require('../gauge');\nconst linuxVariant = require('./osMemoryHeapLinux');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\n\nfunction notLinuxVariant(registry, config = {}) {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst memUsage = safeMemoryUsage();\n\n\t\t\t// I don't think the other things returned from `process.memoryUsage()` is relevant to a standard export\n\t\t\tif (memUsage) {\n\t\t\t\tthis.set(labels, memUsage.rss);\n\t\t\t}\n\t\t},\n\t});\n}\n\nmodule.exports = (registry, config) =>\n\tprocess.platform === 'linux'\n\t\t? linuxVariant(registry, config)\n\t\t: notLinuxVariant(registry, config);\n\nmodule.exports.metricNames =\n\tprocess.platform === 'linux'\n\t\t? linuxVariant.metricNames\n\t\t: [PROCESS_RESIDENT_MEMORY];\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"process\" has been externalized for browser compatibility. Cannot access \"process.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\nconst process = require('process');\n\nconst PROCESS_OPEN_FDS = 'process_open_fds';\n\nmodule.exports = (registry, config = {}) => {\n\tif (process.platform !== 'linux') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_OPEN_FDS,\n\t\thelp: 'Number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\tconst fds = fs.readdirSync('/proc/self/fd');\n\t\t\t\t// Minus 1 to not count the fd that was used by readdirSync(),\n\t\t\t\t// it's now closed.\n\t\t\t\tthis.set(labels, fds.length - 1);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_OPEN_FDS];\n", "'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst PROCESS_MAX_FDS = 'process_max_fds';\n\nlet maxFds;\n\nmodule.exports = (registry, config = {}) => {\n\tif (maxFds === undefined) {\n\t\t// This will fail if a linux-like procfs is not available.\n\t\ttry {\n\t\t\tconst limits = fs.readFileSync('/proc/self/limits', 'utf8');\n\t\t\tconst lines = limits.split('\\n');\n\t\t\tfor (const line of lines) {\n\t\t\t\tif (line.startsWith('Max open files')) {\n\t\t\t\t\tconst parts = line.split(/  +/);\n\t\t\t\t\tmaxFds = Number(parts[1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (maxFds === undefined) return;\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_MAX_FDS,\n\t\thelp: 'Maximum number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tif (maxFds !== undefined) this.set(labels, maxFds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_MAX_FDS];\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"perf_hooks\" has been externalized for browser compatibility. Cannot access \"perf_hooks.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst Gauge = require('../gauge');\n\n// Check if perf_hooks module is available\nlet perf_hooks;\ntry {\n\t/* eslint-disable node/no-unsupported-features/node-builtins */\n\tperf_hooks = require('perf_hooks');\n} catch {\n\t// node version is too old\n}\n\n// Reported always.\nconst NODEJS_EVENTLOOP_LAG = 'nodejs_eventloop_lag_seconds';\n\n// Reported only when perf_hooks is available.\nconst NODEJS_EVENTLOOP_LAG_MIN = 'nodejs_eventloop_lag_min_seconds';\nconst NODEJS_EVENTLOOP_LAG_MAX = 'nodejs_eventloop_lag_max_seconds';\nconst NODEJS_EVENTLOOP_LAG_MEAN = 'nodejs_eventloop_lag_mean_seconds';\nconst NODEJS_EVENTLOOP_LAG_STDDEV = 'nodejs_eventloop_lag_stddev_seconds';\nconst NODEJS_EVENTLOOP_LAG_P50 = 'nodejs_eventloop_lag_p50_seconds';\nconst NODEJS_EVENTLOOP_LAG_P90 = 'nodejs_eventloop_lag_p90_seconds';\nconst NODEJS_EVENTLOOP_LAG_P99 = 'nodejs_eventloop_lag_p99_seconds';\n\nfunction reportEventloopLag(start, gauge, labels) {\n\tconst delta = process.hrtime(start);\n\tconst nanosec = delta[0] * 1e9 + delta[1];\n\tconst seconds = nanosec / 1e9;\n\n\tgauge.set(labels, seconds);\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst registers = registry ? [registry] : undefined;\n\n\tlet collect;\n\tif (!perf_hooks || !perf_hooks.monitorEventLoopDelay) {\n\t\tcollect = () => {\n\t\t\tconst start = process.hrtime();\n\t\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\t\t};\n\t} else {\n\t\tconst histogram = perf_hooks.monitorEventLoopDelay({\n\t\t\tresolution: config.eventLoopMonitoringPrecision,\n\t\t});\n\t\thistogram.enable();\n\n\t\tcollect = () => {\n\t\t\tconst start = process.hrtime();\n\t\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\n\t\t\tlagMin.set(labels, histogram.min / 1e9);\n\t\t\tlagMax.set(labels, histogram.max / 1e9);\n\t\t\tlagMean.set(labels, histogram.mean / 1e9);\n\t\t\tlagStddev.set(labels, histogram.stddev / 1e9);\n\t\t\tlagP50.set(labels, histogram.percentile(50) / 1e9);\n\t\t\tlagP90.set(labels, histogram.percentile(90) / 1e9);\n\t\t\tlagP99.set(labels, histogram.percentile(99) / 1e9);\n\n\t\t\thistogram.reset();\n\t\t};\n\t}\n\n\tconst lag = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG,\n\t\thelp: 'Lag of event loop in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst lagMin = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MIN,\n\t\thelp: 'The minimum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'min',\n\t});\n\tconst lagMax = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MAX,\n\t\thelp: 'The maximum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'max',\n\t});\n\tconst lagMean = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MEAN,\n\t\thelp: 'The mean of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagStddev = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_STDDEV,\n\t\thelp: 'The standard deviation of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP50 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P50,\n\t\thelp: 'The 50th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP90 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P90,\n\t\thelp: 'The 90th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP99 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P99,\n\t\thelp: 'The 99th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_EVENTLOOP_LAG,\n\tNODEJS_EVENTLOOP_LAG_MIN,\n\tNODEJS_EVENTLOOP_LAG_MAX,\n\tNODEJS_EVENTLOOP_LAG_MEAN,\n\tNODEJS_EVENTLOOP_LAG_STDDEV,\n\tNODEJS_EVENTLOOP_LAG_P50,\n\tNODEJS_EVENTLOOP_LAG_P90,\n\tNODEJS_EVENTLOOP_LAG_P99,\n];\n", "'use strict';\n\nfunction aggregateByObjectName(list) {\n\tconst data = {};\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst listElement = list[i];\n\n\t\tif (!listElement || typeof listElement.constructor === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (Object.hasOwnProperty.call(data, listElement.constructor.name)) {\n\t\t\tdata[listElement.constructor.name] += 1;\n\t\t} else {\n\t\t\tdata[listElement.constructor.name] = 1;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction updateMetrics(gauge, data, labels) {\n\tgauge.reset();\n\tfor (const key in data) {\n\t\tgauge.set(Object.assign({ type: key }, labels || {}), data[key]);\n\t}\n}\n\nmodule.exports = {\n\taggregateByObjectName,\n\tupdateMetrics,\n};\n", "'use strict';\n\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\nconst Gauge = require('../gauge');\n\nconst NODEJS_ACTIVE_HANDLES = 'nodejs_active_handles';\nconst NODEJS_ACTIVE_HANDLES_TOTAL = 'nodejs_active_handles_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6-12...)\n\tif (typeof process._getActiveHandles !== 'function') {\n\t\treturn;\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES,\n\t\thelp: 'Number of active libuv handles grouped by handle type. Every handle type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tupdateMetrics(this, aggregateByObjectName(handles), labels);\n\t\t},\n\t});\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES_TOTAL,\n\t\thelp: 'Total number of active handles.',\n\t\tregisters,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tthis.set(labels, handles.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_HANDLES,\n\tNODEJS_ACTIVE_HANDLES_TOTAL,\n];\n", "'use strict';\nconst Gauge = require('../gauge');\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\n\nconst NODEJS_ACTIVE_REQUESTS = 'nodejs_active_requests';\nconst NODEJS_ACTIVE_REQUESTS_TOTAL = 'nodejs_active_requests_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6)\n\tif (typeof process._getActiveRequests !== 'function') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS,\n\t\thelp: 'Number of active libuv requests grouped by request type. Every request type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tupdateMetrics(this, aggregateByObjectName(requests), labels);\n\t\t},\n\t});\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS_TOTAL,\n\t\thelp: 'Total number of active requests.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tthis.set(labels, requests.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_REQUESTS,\n\tNODEJS_ACTIVE_REQUESTS_TOTAL,\n];\n", "'use strict';\nconst Gauge = require('../gauge');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\n\nconst NODEJS_ACTIVE_RESOURCES = 'nodejs_active_resources';\nconst NODEJS_ACTIVE_RESOURCES_TOTAL = 'nodejs_active_resources_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function does not exist in previous nodes (exists in node@17.3.0)\n\tif (typeof process.getActiveResourcesInfo !== 'function') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_RESOURCES,\n\t\thelp: 'Number of active resources that are currently keeping the event loop alive, grouped by async resource type.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\tcollect() {\n\t\t\tconst resources = process.getActiveResourcesInfo();\n\n\t\t\tconst data = {};\n\n\t\t\tfor (let i = 0; i < resources.length; i++) {\n\t\t\t\tconst resource = resources[i];\n\n\t\t\t\tif (Object.hasOwn(data, resource)) {\n\t\t\t\t\tdata[resource] += 1;\n\t\t\t\t} else {\n\t\t\t\t\tdata[resource] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateMetrics(this, data, labels);\n\t\t},\n\t});\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_RESOURCES_TOTAL,\n\t\thelp: 'Total number of active resources.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst resources = process.getActiveResourcesInfo();\n\t\t\tthis.set(labels, resources.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_RESOURCES,\n\tNODEJS_ACTIVE_RESOURCES_TOTAL,\n];\n", "'use strict';\n\nconst Gauge = require('../gauge');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst NODEJS_HEAP_SIZE_TOTAL = 'nodejs_heap_size_total_bytes';\nconst NODEJS_HEAP_SIZE_USED = 'nodejs_heap_size_used_bytes';\nconst NODEJS_EXTERNAL_MEMORY = 'nodejs_external_memory_bytes';\n\nmodule.exports = (registry, config = {}) => {\n\tif (typeof process.memoryUsage !== 'function') {\n\t\treturn;\n\t}\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst collect = () => {\n\t\tconst memUsage = safeMemoryUsage();\n\t\tif (memUsage) {\n\t\t\theapSizeTotal.set(labels, memUsage.heapTotal);\n\t\t\theapSizeUsed.set(labels, memUsage.heapUsed);\n\t\t\tif (memUsage.external !== undefined) {\n\t\t\t\texternalMemUsed.set(labels, memUsage.external);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst heapSizeTotal = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_TOTAL,\n\t\thelp: 'Process heap size from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst heapSizeUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_USED,\n\t\thelp: 'Process heap size used from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst externalMemUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_EXTERNAL_MEMORY,\n\t\thelp: 'Node.js external memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_HEAP_SIZE_TOTAL,\n\tNODEJS_HEAP_SIZE_USED,\n\tNODEJS_EXTERNAL_MEMORY,\n];\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"v8\" has been externalized for browser compatibility. Cannot access \"v8.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nconst Gauge = require('../gauge');\nconst v8 = require('v8');\n\nconst METRICS = ['total', 'used', 'available'];\nconst NODEJS_HEAP_SIZE = {};\n\nMETRICS.forEach(metricType => {\n\tNODEJS_HEAP_SIZE[metricType] = `nodejs_heap_space_size_${metricType}_bytes`;\n});\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = ['space', ...Object.keys(labels)];\n\n\tconst gauges = {};\n\n\tMETRICS.forEach(metricType => {\n\t\tgauges[metricType] = new Gauge({\n\t\t\tname: namePrefix + NODEJS_HEAP_SIZE[metricType],\n\t\t\thelp: `Process heap space size ${metricType} from Node.js in bytes.`,\n\t\t\tlabelNames,\n\t\t\tregisters,\n\t\t});\n\t});\n\n\t// Use this one metric's `collect` to set all metrics' values.\n\tgauges.total.collect = () => {\n\t\tfor (const space of v8.getHeapSpaceStatistics()) {\n\t\t\tconst spaceName = space.space_name.substr(\n\t\t\t\t0,\n\t\t\t\tspace.space_name.indexOf('_space'),\n\t\t\t);\n\n\t\t\tgauges.total.set({ space: spaceName, ...labels }, space.space_size);\n\t\t\tgauges.used.set({ space: spaceName, ...labels }, space.space_used_size);\n\t\t\tgauges.available.set(\n\t\t\t\t{ space: spaceName, ...labels },\n\t\t\t\tspace.space_available_size,\n\t\t\t);\n\t\t}\n\t};\n};\n\nmodule.exports.metricNames = Object.values(NODEJS_HEAP_SIZE);\n", "'use strict';\n\nconst Gauge = require('../gauge');\nconst version = process.version;\nconst versionSegments = version.slice(1).split('.').map(Number);\n\nconst NODE_VERSION_INFO = 'nodejs_version_info';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODE_VERSION_INFO,\n\t\thelp: 'Node.js version info.',\n\t\tlabelNames: ['version', 'major', 'minor', 'patch', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'first',\n\t\tcollect() {\n\t\t\t// Needs to be in collect() so value is present even if reg is reset\n\t\t\tthis.labels(\n\t\t\t\tversion,\n\t\t\t\tversionSegments[0],\n\t\t\t\tversionSegments[1],\n\t\t\t\tversionSegments[2],\n\t\t\t\t...Object.values(labels),\n\t\t\t).set(1);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [NODE_VERSION_INFO];\n", "'use strict';\nconst Histogram = require('../histogram');\n\nlet perf_hooks;\n\ntry {\n\t// eslint-disable-next-line\n\tperf_hooks = require('perf_hooks');\n} catch {\n\t// node version is too old\n}\n\nconst NODEJS_GC_DURATION_SECONDS = 'nodejs_gc_duration_seconds';\nconst DEFAULT_GC_DURATION_BUCKETS = [0.001, 0.01, 0.1, 1, 2, 5];\n\nconst kinds = [];\n\nif (perf_hooks && perf_hooks.constants) {\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MAJOR] = 'major';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MINOR] = 'minor';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_INCREMENTAL] = 'incremental';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_WEAKCB] = 'weakcb';\n}\n\nmodule.exports = (registry, config = {}) => {\n\tif (!perf_hooks) {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst buckets = config.gcDurationBuckets\n\t\t? config.gcDurationBuckets\n\t\t: DEFAULT_GC_DURATION_BUCKETS;\n\tconst gcHistogram = new Histogram({\n\t\tname: namePrefix + NODEJS_GC_DURATION_SECONDS,\n\t\thelp: 'Garbage collection duration by kind, one of major, minor, incremental or weakcb.',\n\t\tlabelNames: ['kind', ...labelNames],\n\t\tbuckets,\n\t\tregisters: registry ? [registry] : undefined,\n\t});\n\n\tconst obs = new perf_hooks.PerformanceObserver(list => {\n\t\tconst entry = list.getEntries()[0];\n\t\t// Node < 16 uses entry.kind\n\t\t// Node >= 16 uses entry.detail.kind\n\t\t// See: https://nodejs.org/docs/latest-v16.x/api/deprecations.html#deprecations_dep0152_extension_performanceentry_properties\n\t\tconst kind = entry.detail ? kinds[entry.detail.kind] : kinds[entry.kind];\n\n\t\t// Convert duration from milliseconds to seconds\n\t\tgcHistogram.observe(Object.assign({ kind }, labels), entry.duration / 1000);\n\t});\n\n\tobs.observe({ entryTypes: ['gc'] });\n};\n\nmodule.exports.metricNames = [NODEJS_GC_DURATION_SECONDS];\n", "'use strict';\n\nconst { isObject } = require('./util');\n\n// Default metrics.\nconst processCpuTotal = require('./metrics/processCpuTotal');\nconst processStartTime = require('./metrics/processStartTime');\nconst osMemoryHeap = require('./metrics/osMemoryHeap');\nconst processOpenFileDescriptors = require('./metrics/processOpenFileDescriptors');\nconst processMaxFileDescriptors = require('./metrics/processMaxFileDescriptors');\nconst eventLoopLag = require('./metrics/eventLoopLag');\nconst processHandles = require('./metrics/processHandles');\nconst processRequests = require('./metrics/processRequests');\nconst processResources = require('./metrics/processResources');\nconst heapSizeAndUsed = require('./metrics/heapSizeAndUsed');\nconst heapSpacesSizeAndUsed = require('./metrics/heapSpacesSizeAndUsed');\nconst version = require('./metrics/version');\nconst gc = require('./metrics/gc');\n\nconst metrics = {\n\tprocessCpuTotal,\n\tprocessStartTime,\n\tosMemoryHeap,\n\tprocessOpenFileDescriptors,\n\tprocessMaxFileDescriptors,\n\teventLoopLag,\n\t...(typeof process.getActiveResourcesInfo === 'function'\n\t\t? { processResources }\n\t\t: {}),\n\tprocessHandles,\n\tprocessRequests,\n\theapSizeAndUsed,\n\theapSpacesSizeAndUsed,\n\tversion,\n\tgc,\n};\nconst metricsList = Object.keys(metrics);\n\nmodule.exports = function collectDefaultMetrics(config) {\n\tif (config !== null && config !== undefined && !isObject(config)) {\n\t\tthrow new TypeError('config must be null, undefined, or an object');\n\t}\n\n\tconfig = { eventLoopMonitoringPrecision: 10, ...config };\n\n\tfor (const metric of Object.values(metrics)) {\n\t\tmetric(config.register, config);\n\t}\n};\n\nmodule.exports.metricsList = metricsList;\n", "'use strict';\n\nconst { Grouper, hashObject } = require('./util');\n\n/**\n * Returns a new function that applies the `aggregatorFn` to the values.\n * @param {Function} aggregatorFn function to apply to values.\n * @return {Function} aggregator function\n */\nfunction AggregatorFactory(aggregatorFn) {\n\treturn metrics => {\n\t\tif (metrics.length === 0) return;\n\t\tconst result = {\n\t\t\thelp: metrics[0].help,\n\t\t\tname: metrics[0].name,\n\t\t\ttype: metrics[0].type,\n\t\t\tvalues: [],\n\t\t\taggregator: metrics[0].aggregator,\n\t\t};\n\t\t// Gather metrics by metricName and labels.\n\t\tconst byLabels = new Grouper();\n\t\tmetrics.forEach(metric => {\n\t\t\tmetric.values.forEach(value => {\n\t\t\t\tconst key = hashObject(value.labels);\n\t\t\t\tbyLabels.add(`${value.metricName}_${key}`, value);\n\t\t\t});\n\t\t});\n\t\t// Apply aggregator function to gathered metrics.\n\t\tbyLabels.forEach(values => {\n\t\t\tif (values.length === 0) return;\n\t\t\tconst valObj = {\n\t\t\t\tvalue: aggregatorFn(values),\n\t\t\t\tlabels: values[0].labels,\n\t\t\t};\n\t\t\tif (values[0].metricName) {\n\t\t\t\tvalObj.metricName = values[0].metricName;\n\t\t\t}\n\t\t\t// NB: Timestamps are omitted.\n\t\t\tresult.values.push(valObj);\n\t\t});\n\t\treturn result;\n\t};\n}\n// Export for users to define their own aggregation methods.\nexports.AggregatorFactory = AggregatorFactory;\n\n/**\n * Functions that can be used to aggregate metrics from multiple registries.\n */\nexports.aggregators = {\n\t/**\n\t * @return The sum of values.\n\t */\n\tsum: AggregatorFactory(v => v.reduce((p, c) => p + c.value, 0)),\n\t/**\n\t * @return The first value.\n\t */\n\tfirst: AggregatorFactory(v => v[0].value),\n\t/**\n\t * @return {undefined} Undefined; omits the metric.\n\t */\n\tomit: () => {},\n\t/**\n\t * @return The arithmetic mean of the values.\n\t */\n\taverage: AggregatorFactory(\n\t\tv => v.reduce((p, c) => p + c.value, 0) / v.length,\n\t),\n\t/**\n\t * @return The minimum of the values.\n\t */\n\tmin: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.min(p, c.value), Infinity),\n\t),\n\t/**\n\t * @return The maximum of the values.\n\t */\n\tmax: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.max(p, c.value), -Infinity),\n\t),\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"cluster\" has been externalized for browser compatibility. Cannot access \"cluster.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\n/**\n * Extends the Registry class with a `clusterMetrics` method that returns\n * aggregated metrics for all workers.\n *\n * In cluster workers, listens for and responds to requests for metrics by the\n * cluster master.\n */\n\nconst Registry = require('./registry');\nconst { Grouper } = require('./util');\nconst { aggregators } = require('./metricAggregators');\n// We need to lazy-load the 'cluster' module as some application servers -\n// namely Passenger - crash when it is imported.\nlet cluster = () => {\n\tconst data = require('cluster');\n\tcluster = () => data;\n\treturn data;\n};\n\nconst GET_METRICS_REQ = 'prom-client:getMetricsReq';\nconst GET_METRICS_RES = 'prom-client:getMetricsRes';\n\nlet registries = [Registry.globalRegistry];\nlet requestCtr = 0; // Concurrency control\nlet listenersAdded = false;\nconst requests = new Map(); // Pending requests for workers' local metrics.\n\nclass AggregatorRegistry extends Registry {\n\tconstructor() {\n\t\tsuper();\n\t\taddListeners();\n\t}\n\n\t/**\n\t * Gets aggregated metrics for all workers. The optional callback and\n\t * returned Promise resolve with the same value; either may be used.\n\t * @return {Promise<string>} Promise that resolves with the aggregated\n\t *   metrics.\n\t */\n\tclusterMetrics() {\n\t\tconst requestId = requestCtr++;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet settled = false;\n\t\t\tfunction done(err, result) {\n\t\t\t\tif (settled) return;\n\t\t\t\tsettled = true;\n\t\t\t\tif (err) reject(err);\n\t\t\t\telse resolve(result);\n\t\t\t}\n\n\t\t\tconst request = {\n\t\t\t\tresponses: [],\n\t\t\t\tpending: 0,\n\t\t\t\tdone,\n\t\t\t\terrorTimeout: setTimeout(() => {\n\t\t\t\t\tconst err = new Error('Operation timed out.');\n\t\t\t\t\trequest.done(err);\n\t\t\t\t}, 5000),\n\t\t\t};\n\t\t\trequests.set(requestId, request);\n\n\t\t\tconst message = {\n\t\t\t\ttype: GET_METRICS_REQ,\n\t\t\t\trequestId,\n\t\t\t};\n\n\t\t\tfor (const id in cluster().workers) {\n\t\t\t\t// If the worker exits abruptly, it may still be in the workers\n\t\t\t\t// list but not able to communicate.\n\t\t\t\tif (cluster().workers[id].isConnected()) {\n\t\t\t\t\tcluster().workers[id].send(message);\n\t\t\t\t\trequest.pending++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (request.pending === 0) {\n\t\t\t\t// No workers were up\n\t\t\t\tclearTimeout(request.errorTimeout);\n\t\t\t\tprocess.nextTick(() => done(null, ''));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new Registry instance from an array of metrics that were\n\t * created by `registry.getMetricsAsJSON()`. Metrics are aggregated using\n\t * the method specified by their `aggregator` property, or by summation if\n\t * `aggregator` is undefined.\n\t * @param {Array} metricsArr Array of metrics, each of which created by\n\t *   `registry.getMetricsAsJSON()`.\n\t * @return {Registry} aggregated registry.\n\t */\n\tstatic aggregate(metricsArr) {\n\t\tconst aggregatedRegistry = new Registry();\n\t\tconst metricsByName = new Grouper();\n\n\t\t// Gather by name\n\t\tmetricsArr.forEach(metrics => {\n\t\t\tmetrics.forEach(metric => {\n\t\t\t\tmetricsByName.add(metric.name, metric);\n\t\t\t});\n\t\t});\n\n\t\t// Aggregate gathered metrics.\n\t\tmetricsByName.forEach(metrics => {\n\t\t\tconst aggregatorName = metrics[0].aggregator;\n\t\t\tconst aggregatorFn = aggregators[aggregatorName];\n\t\t\tif (typeof aggregatorFn !== 'function') {\n\t\t\t\tthrow new Error(`'${aggregatorName}' is not a defined aggregator.`);\n\t\t\t}\n\t\t\tconst aggregatedMetric = aggregatorFn(metrics);\n\t\t\t// NB: The 'omit' aggregator returns undefined.\n\t\t\tif (aggregatedMetric) {\n\t\t\t\tconst aggregatedMetricWrapper = Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tget: () => aggregatedMetric,\n\t\t\t\t\t},\n\t\t\t\t\taggregatedMetric,\n\t\t\t\t);\n\t\t\t\taggregatedRegistry.registerMetric(aggregatedMetricWrapper);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregatedRegistry;\n\t}\n\n\t/**\n\t * Sets the registry or registries to be aggregated. Call from workers to\n\t * use a registry/registries other than the default global registry.\n\t * @param {Array<Registry>|Registry} regs Registry or registries to be\n\t *   aggregated.\n\t * @return {void}\n\t */\n\tstatic setRegistries(regs) {\n\t\tif (!Array.isArray(regs)) regs = [regs];\n\t\tregs.forEach(reg => {\n\t\t\tif (!(reg instanceof Registry)) {\n\t\t\t\tthrow new TypeError(`Expected Registry, got ${typeof reg}`);\n\t\t\t}\n\t\t});\n\t\tregistries = regs;\n\t}\n}\n\n/**\n * Adds event listeners for cluster aggregation. Idempotent (safe to call more\n * than once).\n * @return {void}\n */\nfunction addListeners() {\n\tif (listenersAdded) return;\n\tlistenersAdded = true;\n\n\tif (cluster().isMaster) {\n\t\t// Listen for worker responses to requests for local metrics\n\t\tcluster().on('message', (worker, message) => {\n\t\t\tif (message.type === GET_METRICS_RES) {\n\t\t\t\tconst request = requests.get(message.requestId);\n\n\t\t\t\tif (message.error) {\n\t\t\t\t\trequest.done(new Error(message.error));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage.metrics.forEach(registry => request.responses.push(registry));\n\t\t\t\trequest.pending--;\n\n\t\t\t\tif (request.pending === 0) {\n\t\t\t\t\t// finalize\n\t\t\t\t\trequests.delete(message.requestId);\n\t\t\t\t\tclearTimeout(request.errorTimeout);\n\n\t\t\t\t\tconst registry = AggregatorRegistry.aggregate(request.responses);\n\t\t\t\t\tconst promString = registry.metrics();\n\t\t\t\t\trequest.done(null, promString);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (cluster().isWorker) {\n\t\t// Respond to master's requests for worker's local metrics.\n\t\tprocess.on('message', message => {\n\t\t\tif (message.type === GET_METRICS_REQ) {\n\t\t\t\tPromise.all(registries.map(r => r.getMetricsAsJSON()))\n\t\t\t\t\t.then(metrics => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\tmetrics,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = AggregatorRegistry;\n", "/**\n * Prometheus client\n * @module Prometheus client\n */\n\n'use strict';\n\nexports.register = require('./lib/registry').globalRegistry;\nexports.Registry = require('./lib/registry');\nexports.contentType = require('./lib/registry').globalRegistry.contentType;\nexports.validateMetricName = require('./lib/validation').validateMetricName;\n\nexports.Counter = require('./lib/counter');\nexports.Gauge = require('./lib/gauge');\nexports.Histogram = require('./lib/histogram');\nexports.Summary = require('./lib/summary');\nexports.Pushgateway = require('./lib/pushgateway');\n\nexports.linearBuckets = require('./lib/bucketGenerators').linearBuckets;\nexports.exponentialBuckets =\n\trequire('./lib/bucketGenerators').exponentialBuckets;\n\nexports.collectDefaultMetrics = require('./lib/defaultMetrics');\n\nexports.aggregators = require('./lib/metricAggregators').aggregators;\nexports.AggregatorRegistry = require('./lib/cluster');\n"],
  "mappings": "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",
  "names": ["require_util", "ret", "process", "require_cluster"]
}
